---
import { type CollectionEntry, getCollection, render } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";

export async function getStaticPaths() {
  const posts = await getCollection("mods");
  return posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }));
}
type Props = CollectionEntry<"mods">;

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  heroAspectRatio = "16/9",
} = Astro.props.data;
const { Content } = await render(Astro.props);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} image={heroImage} />
    <style>
      main {
        width: calc(100% - 32px);
        max-width: 100%;
        margin: 0;
      }
      .hero-image {
        width: 100%;
      }
      .hero-image img {
        display: block;
        margin: 0 auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
        background-color: rgb(var(--black));
      }
      .prose {
        width: 720px;
        max-width: calc(100% - 32px);
        margin: auto;
        padding: 16px;
        color: #fff;
      }
      .title {
        margin-bottom: 16px;
        padding: 16px 0;
        text-align: center;
      }
      .date {
        margin-bottom: 8px;
        color: rgb(var(--gray-light));
      }
      .last-updated-on {
        font-style: italic;
        margin-top: 8px;
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class="hero-image">
          {
            heroImage && (
              <img
                width={1020}
                height={510}
                src={heroImage}
                style={`aspect-ratio:${heroAspectRatio}`}
                alt=""
              />
            )
          }
        </div>
        <div class="prose">
          <div class="title">
            <div class="date">
              <FormattedDate date={pubDate} />
              {
                updatedDate && (
                  <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                  </div>
                )
              }
            </div>
            <h1>{title}</h1>
          </div>
          <Content />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
